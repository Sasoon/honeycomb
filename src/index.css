/* Import fonts first to avoid PostCSS warnings */
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap');

/* Tailwind CSS imports */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* CSS Variables for Dynamic Color Palettes */
:root {
  /* Primary Palette Variables - "Midnight Hues" */
  --color-1: #1d1f20;  /* Shark (dark base, headers) */
  --color-2: #3f4750;  /* Mako (secondary dark, accents) */
  --color-3: #606d80;  /* Shuttle Gray (mid-tone, text) */
  --color-4: #a0b2c5;  /* Cadet Blue (highlights, success) */
  --color-5: #d2d4da;  /* Mischka (light, backgrounds) */
  
  /* Semantic Color Assignments */
  --primary: var(--color-1);
  --secondary: var(--color-5);
  --accent: var(--color-2);
  --highlight: var(--color-3);
  --success: var(--color-4);
  
  /* UI Color Variations */
  --primary-light: #2a2c2e;
  --primary-dark: #0f1011;
  --secondary-light: #e5e6e9;
  --secondary-dark: #a8abb2;
  --accent-light: #7a8699;
  --accent-dark: #4a5563;
  --highlight-light: #b8c4d1;
  --highlight-dark: #889bb0;
  --success-light: #c5d1dc;
  --success-dark: #7b93ae;
  
  /* Amber accent colors */
  --amber: #B45309;
  --amber-light: #DC6F0F;
  --amber-dark: #92420A;
  
  /* Background and Text */
  --bg-primary: #f8f9fa;
  --bg-secondary: var(--color-5);
  --text-primary: var(--color-1);
  --text-secondary: var(--color-2);
  --text-muted: var(--color-3);
}

body {
  font-family: 'Poppins', system-ui, -apple-system, sans-serif;
  background-color: var(--bg-primary);
  color: var(--text-primary);
  font-size: 16px; /* Explicit base for rem calculations */
  --header-height: 52px; /* Header with py-4 (16px padding) + content height */
  
  /* Standardized spacing system - 8px base grid */
  --spacing-section: 2rem; /* 32px - section spacing */
  --spacing-content: 1.5rem; /* 24px - content spacing */
  --spacing-element: 1rem; /* 16px - element spacing */
  --spacing-compact: 0.5rem; /* 8px - compact spacing */
  
  /* Container system */
  --container-narrow: 48rem; /* 768px - Stats, forms */
  --container-standard: 64rem; /* 1024px - Content pages */
  --container-wide: 80rem; /* 1280px - Leaderboard, tables */
  
  /* Content padding */
  --padding-page: clamp(1rem, 4vw, 2rem); /* Responsive padding */
}

html {
  -webkit-text-size-adjust: 100%; /* Prevent iOS text size adjust */
  text-size-adjust: 100%;
}

body {
  margin: 0;
  min-width: 320px;
  min-height: 100vh;
  overflow-x: hidden;
}

/* Prevent text selection on specific game elements only */
.hex-grid__item,
.letter-tile,
.game-button,
.power-card,
.cursor-grab,
.cursor-grabbing,
[title*="Drag to rotate tiles around pivot"],
button {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Prevent text selection on the Next drop preview */
.next-drop-preview,
.next-drop-preview * {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Define font weights explicitly for Tailwind v3 */
.font-bold {
  font-weight: 700;
}

.font-semibold {
  font-weight: 600;
}

.font-medium {
  font-weight: 500;
}

.font-normal {
  font-weight: 400;
}

/* Font sizes are defined in Tailwind config - removed duplicates for consistency */

/* Standardized layout system */
.page-container {
  width: 100%;
  margin: 0 auto;
  padding: var(--spacing-section) var(--padding-page) var(--spacing-content);
}

.page-container--narrow {
  max-width: var(--container-narrow);
}

.page-container--standard {
  max-width: var(--container-standard);
}

.page-container--wide {
  max-width: var(--container-wide);
}

.page-title {
  font-size: 1.875rem; /* text-3xl */
  font-weight: 700;
  text-align: center;
  margin-bottom: var(--spacing-content);
}

.section-spacing {
  margin-bottom: var(--spacing-section);
}

.content-spacing {
  margin-bottom: var(--spacing-content);
}

.element-spacing {
  margin-bottom: var(--spacing-element);
}

/* Hexagonal Grid System */
.hex-grid {
  width: 100%;
  max-width: 800px;
  margin: 0 auto;
  padding: 1rem;
}

.hex-grid__item {
  position: relative;
  width: 100%;
  padding-bottom: 115.47%; /* = 100% * cos(30°) / sin(60°) */
  clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
  transition: transform 0.2s ease;
  cursor: pointer;
  z-index: 1;
}

.hex-grid__item:hover {
  transform: scale(1.05);
  z-index: 5;
}

.hex-grid__item:active {
  transform: scale(1.02);
}

.hex-grid__content {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
}

/* Special background colors for different states */
.hex-grid__item.bg-blue-500 {
  background: linear-gradient(135deg, var(--primary), var(--primary-dark));
  color: white;
}

.hex-grid__item.bg-highlight-light {
  background: linear-gradient(135deg, var(--highlight-light), var(--highlight));
  position: relative;
}

.hex-grid__item.bg-honeycomb-light {
  background: linear-gradient(135deg, var(--highlight-light), var(--highlight));
}

.hex-grid__item.bg-secondary {
  
}

/* Hexagon Border Animations */
@keyframes hexBorderPulse {
  0% { 
    stroke-opacity: 0.8;
    stroke-width: 2;
  }
  100% { 
    stroke-opacity: 1;
    stroke-width: 3;
  }
}

/* Legacy border styles (to be removed) */
.hex-grid__item.hex-border-blue {
  box-shadow: 0 0 0 2px var(--primary);
}

.hex-grid__item.hex-border-green {
  box-shadow: 0 0 0 2px var(--success);
}

.hex-grid__item.hex-border-red {
  /* border: 2px solid var(--primary); */
}

.hex-grid__item.hex-border-honeycomb {
  border: 2px solid var(--highlight);
}

.hex-grid__item.hex-border-gray {
  border: 2px solid var(--success);
}

.hex-grid__item.hex-border-purple {
  border: 2px solid var(--secondary);
}

.hex-grid__item.hex-border-amber {
  border: 2px solid var(--highlight);
}

.hex-grid__item.hex-border-orange {
  border: 2px solid var(--primary-light);
}

/* Lock border animations */
.hex-grid__item.hex-border-locked,
.hex-grid__item.hex-border-locking,
.hex-grid__item.hex-border-unlocking {
  position: relative;
}

.hex-grid__item.hex-border-locked::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: url("data:image/svg+xml,%3csvg width='100%25' height='115.47%25' viewBox='0 0 100 115.47' xmlns='http://www.w3.org/2000/svg' preserveAspectRatio='none'%3e%3cpath d='M 50 0 L 100 28.87 L 100 86.60 L 50 115.47 L 0 86.60 L 0 28.87 Z' fill='none' stroke='%231d1f20' stroke-width='2'/%3e%3c/svg%3e");
  background-size: 100% 100%;
  background-repeat: no-repeat;
  background-position: center;
  z-index: 10;
  pointer-events: none;
  clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
}

.hex-grid__item.hex-double-score {
  position: relative;
}

.letter-tile {
  font-size: 1.5rem;
  font-weight: 700;
  z-index: 3;
}

.double-score-badge {
  position: absolute;
  top: 15%;
  right: 15%;
  width: 1.25rem;
  height: 1.25rem;
  background-color: var(--primary);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  z-index: 4;
}

.double-score-badge span {
  font-size: 0.8rem;
  font-weight: 700;
  color: white;
}

/* Subtle pulse animation for tiles that can be undone */
@keyframes subtlePulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.05); }
  100% { transform: scale(1); }
}

/* Row adjustments for honeycomb pattern */
/* .row {
  margin-top: -25px;
} */

/* Original game button styles */
.game-button {
  padding: 0.5rem 1rem;
  background-color: var(--primary);
  color: white;
  border-radius: 0.5rem;
  transition-property: color, background-color, border-color;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  font-weight: 600;
}

.game-button:hover {
  background-color: var(--secondary);
}

/* Add a pulsing glow effect for adjacent cells */
.pulse-glow {
  animation: pulse-animation 1.5s infinite;
}

@keyframes pulse-animation {
  0% {
    box-shadow: 0 0 0 0 rgba(147, 51, 234, 0.4);
  }
  70% {
    box-shadow: 0 0 0 10px rgba(147, 51, 234, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(147, 51, 234, 0);
  }
}

/* Special style for wild tile */
.wild-tile {
  background: linear-gradient(135deg, var(--primary), var(--secondary));
  color: white;
  transform: rotate(0deg);
  transition: transform 0.3s ease;
}


/* Enhance the tile placement animation */
@keyframes squashStretch {
  0% {
    transform: scale(1.2);
    filter: brightness(1.2);
  }
  20% {
    transform: scale(0.9);
  }
  40% {
    transform: scale(1.1);
  }
  60% {
    transform: scale(0.95);
  }
  80% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
    filter: brightness(1);
  }
}

/* Subtle floating animation for selected tiles */
@keyframes floatEffect {
  0% { transform: translateY(0) scale(1.1); }
  50% { transform: translateY(-3px) scale(1.1); }
  100% { transform: translateY(0) scale(1.1); }
}

/* Add dust particles animation for tile placement */
.tile-placed-animation:not(.animation-finished) {
  animation: squashStretch 0.5s ease-out forwards;
  position: relative;
}

.tile-placed-animation:not(.animation-finished)::before,
.tile-placed-animation:not(.animation-finished)::after {
  content: '';
  position: absolute;
  width: 7px;
  height: 7px;
  border-radius: 50%;
  background: rgba(163, 209, 208, 0.8); /* success with opacity */
  top: 50%;
  animation: dustParticle 0.5s ease-out forwards;
  z-index: 10;
}

.tile-placed-animation:not(.animation-finished)::before {
  left: 30%;
  animation-delay: 0.05s;
}

.tile-placed-animation:not(.animation-finished)::after {
  right: 30%;
  animation-delay: 0.15s;
}

@keyframes dustParticle {
  0% {
    opacity: 0;
    transform: translate(0, 0) scale(0);
  }
  20% {
    opacity: 1;
    transform: translate(-5px, -10px) scale(1);
  }
  80% {
    opacity: 0.8;
  }
  100% {
    opacity: 0;
    transform: translate(-10px, -20px) scale(0);
  }
}

/* Add impact ring animation */
.hex-grid__item.bg-highlight-light:not(.animation-finished)::after {
  content: '';
  position: absolute;
  inset: -5px;
  border-radius: 9999px;
  background: transparent;
  border: 3px solid rgba(163, 209, 208, 0.4); /* success with opacity */
  clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
  animation: impactRing 0.5s ease-out forwards;
  z-index: 2;
}

@keyframes impactRing {
  0% {
    transform: scale(0.8);
    opacity: 0.8;
  }
  50% {
    opacity: 0.6;
  }
  100% {
    transform: scale(1.2);
    opacity: 0;
  }
}

/* Glow effect for selected tiles */
.selected-tile-glow {
  box-shadow: 0 0 10px rgba(59, 130, 246, 0.7);
  animation: floatEffect 2s ease-in-out infinite;
}

/* Burn animation styles */
.burn-animated-tile {
  pointer-events: none;
  will-change: transform;
  position: fixed;
  z-index: 100;
}

.burn-animated-tile-inner {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  font-size: 1.25rem;
  border-radius: 0.5rem;
  border-width: 1px;
  box-shadow: 0 0 15px 5px rgba(255, 59, 48, 0.4);
  transition: all 0.2s ease;
  position: relative;
  overflow: hidden;
}

/* Burn trail effect */
.burn-animated-tile::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 0;
  right: 0;
  height: 5px;
  background: linear-gradient(90deg, 
    rgba(255, 87, 34, 0) 0%, 
    rgba(255, 87, 34, 0.3) 20%, 
    rgba(255, 159, 0, 0.7) 40%, 
    rgba(255, 193, 7, 0.8) 60%, 
    rgba(255, 235, 59, 0.3) 80%, 
    rgba(255, 241, 118, 0) 100%
  );
  transform: translateY(-50%);
  filter: blur(3px);
  opacity: 0.7;
  z-index: -1;
  animation: burn-trail 0.5s ease-out;
}

@keyframes burn-trail {
  0% {
    width: 0;
    opacity: 0;
    filter: blur(1px);
  }
  50% {
    opacity: 0.9;
    filter: blur(3px);
  }
  100% {
    width: 100%;
    opacity: 0;
    filter: blur(5px);
  }
}

/* Enhanced burn particles */
.burn-particle {
  position: absolute;
  background-color: var(--primary);
  border-radius: 50%;
  opacity: 0.8;
  animation: burn-particle-animation 0.5s ease-out forwards;
}

@keyframes burn-particle-animation {
  0% {
    transform: translate(0, 0) scale(1);
    opacity: 0.8;
  }
  100% {
    transform: translate(var(--x), var(--y)) scale(0);
    opacity: 0;
  }
}

/* Fire impact effect on burn button */
.burn-impact {
  position: relative;
}

.burn-impact::after {
  content: '';
  position: absolute;
  inset: -10px;
  border-radius: 50%;
  background: radial-gradient(circle, rgba(247,110,110,0.6) 0%, rgba(247,110,110,0) 70%); /* coral */
  opacity: 0;
  transform: scale(0.5);
  animation: burn-impact 0.5s ease-out forwards;
}

@keyframes burn-impact {
  0% {
    opacity: 0;
    transform: scale(0.5);
  }
  40% {
    opacity: 0.8;
  }
  100% {
    opacity: 0;
    transform: scale(1.5);
  }
}

/* Fire particle animations and styles */
.fire-particle-0 {
  background: var(--primary);
  box-shadow: 0 0 8px 2px var(--primary);
}

.fire-particle-1 {
  background: var(--secondary);
  box-shadow: 0 0 8px 2px var(--accent);
}

.fire-particle-2 {
  background: var(--highlight);
  box-shadow: 0 0 8px 2px var(--highlight);
}

/* Burn icon glow effect */
.burn-icon-glow {
  filter: drop-shadow(0 0 5px rgba(255, 59, 48, 0.8));
  animation: icon-pulse 1s infinite alternate;
}

@keyframes icon-pulse {
  0% { filter: drop-shadow(0 0 3px rgba(255, 59, 48, 0.6)); }
  100% { filter: drop-shadow(0 0 8px rgba(255, 59, 48, 1)); }
}

/* Transition for filter property */
.transition-filter {
  transition-property: filter, transform;
  transition-timing-function: ease;
  transition-duration: 0.3s;
}

/* Glow effect for active burn button */
.burn-button-active {
  position: relative;
}

.burn-button-active::before {
  content: '';
  position: absolute;
  inset: 0;
  background: radial-gradient(circle, rgba(247,110,110,0.2) 0%, rgba(247,110,110,0) 70%); /* coral */
  border-radius: 50%;
  z-index: -1;
  animation: pulseFire 2s infinite;
}

@keyframes pulseFire {
  0% {
    transform: scale(1);
    opacity: 0.2;
  }
  50% {
    transform: scale(1.5);
    opacity: 0.4;
  }
  100% {
    transform: scale(1);
    opacity: 0.2;
  }
}

/* Burn animation effects */
.burn-impact {
  animation: burn-pulse 0.5s ease-out;
}

@keyframes burn-pulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.15); filter: brightness(1.5); }
  100% { transform: scale(1); }
}

.fire-particle-0 {
  background-color: var(--secondary);
}

.fire-particle-1 {
  background-color: var(--primary);  
}

.fire-particle-2 {
  background-color: var(--highlight);
}

/* Tile placement animations */
.tile-placement-animated {
  pointer-events: none;
  will-change: transform;
  position: fixed;
  z-index: 100;
  filter: drop-shadow(0 2px 8px rgba(0, 0, 0, 0.2));
  transform-origin: center center;
}

@keyframes placement-bob {
  0% { transform: translate(-50%, -50%) rotate(0deg); }
  25% { transform: translate(-50%, calc(-50% - 5px)) rotate(-2deg); }
  50% { transform: translate(-50%, -50%) rotate(0deg); }
  75% { transform: translate(-50%, calc(-50% - 3px)) rotate(2deg); }
  100% { transform: translate(-50%, -50%) rotate(0deg); }
}

.tile-placement-animated-inner {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  font-size: 1.25rem;
  border-radius: 0.5rem;
  border: 1px solid black;
  filter: drop-shadow(0px 0px 8px rgba(52, 211, 153, 0.6));
  will-change: transform;
  position: relative;
  overflow: hidden;
}

.tile-placement-animated::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 0;
  right: 0;
  height: 5px;
  background: linear-gradient(90deg, 
    rgba(52, 211, 153, 0) 0%, 
    rgba(52, 211, 153, 0.3) 20%, 
    rgba(52, 211, 153, 0.7) 40%, 
    rgba(52, 211, 153, 0.8) 60%, 
    rgba(52, 211, 153, 0.3) 80%, 
    rgba(52, 211, 153, 0) 100%
  );
  transform: translateY(-50%);
  filter: blur(3px);
  opacity: 0.7;
  z-index: -1;
  animation: placement-trail 0.5s ease-out;
}

@keyframes placement-trail {
  0% {
    width: 0;
    opacity: 0;
    filter: blur(1px);
  }
  50% {
    opacity: 0.9;
    filter: blur(3px);
  }
  100% {
    width: 100%;
    opacity: 0;
    filter: blur(5px);
  }
}

/* Enhance tile placement impact */
.hex-placement-impact:not(.animation-finished) {
  position: relative;
}

.hex-placement-impact:not(.animation-finished)::after {
  content: '';
  position: absolute;
  inset: -5px;
  border-radius: 9999px;
  background: transparent;
  border: 3px solid rgba(163, 209, 208, 0.6); /* success */
  clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
  animation: placement-impact 0.5s ease-out forwards;
  z-index: 5;
}

@keyframes placement-impact {
  0% {
    transform: scale(0.8);
    opacity: 0.8;
  }
  50% {
    opacity: 0.6;
  }
  100% {
    transform: scale(1.2);
    opacity: 0;
  }
}

/* Enhanced dust particle animations */
.tile-placed-animation:not(.animation-finished)::before, 
.tile-placed-animation:not(.animation-finished)::after,
.tile-placed-animation:not(.animation-finished)::before,
.tile-placed-animation:not(.animation-finished)::after {
  content: '';
  position: absolute;
  width: 7px;
  height: 7px;
  border-radius: 50%;
  background: rgba(163, 209, 208, 0.8); /* success */
  top: 50%;
  animation: enhanced-dust-particle 0.5s ease-out forwards;
  z-index: 10;
}

.tile-placed-animation:not(.animation-finished)::before {
  left: 30%;
  animation-delay: 0.05s;
}

.tile-placed-animation:not(.animation-finished)::after {
  right: 30%;
  animation-delay: 0.15s;
}

@keyframes enhanced-dust-particle {
  0% {
    opacity: 0;
    transform: translate(0, 0) scale(0);
    filter: blur(0px);
  }
  20% {
    opacity: 1;
    transform: translate(-5px, -10px) scale(1);
    filter: blur(1px);
  }
  80% {
    opacity: 0.8;
    filter: blur(2px);
  }
  100% {
    opacity: 0;
    transform: translate(-15px, -25px) scale(0);
    filter: blur(3px);
  }
}

/* Tetris Game Animations */
.tiles-dropping .hex-grid__item {
  animation: tilesDrop 0.5s ease-in-out;
}

@keyframes tilesDrop {
  0% {
    transform: translateY(-30px) scale(0.8);
    opacity: 0.6;
  }
  25% {
    transform: translateY(-10px) scale(0.95);
    opacity: 0.8;
  }
  50% {
    transform: translateY(5px) scale(1.05);
    opacity: 0.9;
  }
  75% {
    transform: translateY(-2px) scale(0.98);
    opacity: 1;
  }
  100% {
    transform: translateY(0) scale(1);
    opacity: 1;
  }
}

/* Enhanced tile animation with bouncing effect */
.hex-grid__item {
  transition: transform 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55), box-shadow 0.3s ease;
}

.hex-grid__item.bg-highlight-light {
  transform: scale(1.02);
  box-shadow: 0 2px 8px var(--highlight);
}

/* Add a cascade effect for multiple falling tiles */
.tiles-dropping .hex-grid__item:nth-child(odd) {
  animation-delay: 0.05s;
}

.tiles-dropping .hex-grid__item:nth-child(even) {
  animation-delay: 0.1s;
}

.tiles-dropping .hex-grid__item:nth-child(3n) {
  animation-delay: 0.15s;
}

/* Tile impact effect when landing */
@keyframes tileImpact {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(0.95);
  }
  100% {
    transform: scale(1);
  }
}

.tile-landing {
  animation: tileImpact 0.2s ease-out;
}

/* Tetris Mode - Pinball Style Step-by-Step Falling Animation */
.animated-falling-tile {
  position: fixed;
  width: 60px; /* Match hex cell visual size */
  height: 60px;
  display: flex;
  align-items: center;
  justify-content: center;
  pointer-events: none;
  z-index: 1000;
  will-change: left, top, transform, opacity; /* Optimize for animations */
  /* The `transform: translate(-50%, -50%)` will be set by JS to center the tile */
  /* `left` and `top` will be set by JS to the center of target hex cells */
  /* Initial state (set by JS before first animation step): */
  /* opacity: 0; */
  /* transform: translate(-50%, -50%) scale(0.7); */

  /* CSS transition for smooth movement between steps */
  transition-property: left, top, transform, opacity;
  transition-timing-function: ease-out; /* Can be customized */
  /* transition-duration will be set effectively by JS setTimeout timings */
}

.animated-falling-tile .letter-tile {
  font-size: 1.5rem;
  font-weight: 700;
  color: var(--text-primary);
  background: linear-gradient(145deg, var(--highlight), var(--highlight-dark));
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15), 0 1px 2px rgba(0,0,0,0.1);
  border: 1px solid rgba(0,0,0,0.05);
  transform: rotate(0deg); /* Base rotation */
  transition: transform 0.1s ease-out; /* For subtle wobble/spin during step */
}

/* Optional: Add a subtle wobble or spin as it moves */
.animated-falling-tile.moving .letter-tile {
   /* Example: transform: rotate(5deg); */
}

/* Effect for the hex cell when a tile "hits" it (peg effect) */
.hex-grid__item.tile-hit-peg {
  animation: hitPegEffect 0.15s ease-out forwards;
}

@keyframes hitPegEffect {
  0% {
    transform: scale(1);
    filter: brightness(1);
  }
  50% {
    transform: scale(1.07);
    filter: brightness(1.15);
  }
  100% {
    transform: scale(1);
    filter: brightness(1);
  }
}

/* Effect for the final landing spot on the actual grid cell */
.hex-grid__item.tile-landed-effect {
  animation: landBounceEffect 0.4s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
  /* Ensures the letter inside the final cell also participates if needed */
  /* position: relative; z-index: 10; */ 
}

@keyframes landBounceEffect {
  0% {
    transform: scale(1) translateY(0);
    filter: brightness(1);
  }
  30% {
    transform: scale(1.1, 0.85) translateY(0);
    filter: brightness(1.2);
  }
  60% {
    transform: scale(0.95, 1.1) translateY(-6px);
    filter: brightness(1.05);
  }
  100% {
    transform: scale(1) translateY(0);
    filter: brightness(1);
  }
}

/* Simple falling tile - no fancy effects */
.simple-falling-tile {
  /* Basic tile styling only */
}

.simple-falling-tile .letter-tile {
  font-size: 1.125rem;
  font-weight: 700;
  color: var(--text-primary);
  background: none;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Ensure old/conflicting animation classes are cleared or not used */
.tile-falling, .tile-dropping {
  display: none !important; /* Hide elements with old animation classes */
}

/* Ensure hex grid items show data attributes */
.hex-grid__item[data-row][data-col] {
  position: relative;
}

/* Prevent flicker during animation setup */
.hex-grid__item {
  backface-visibility: hidden;
  transform: translateZ(0);
}

/* Ensure smooth animation on mobile */
@media (prefers-reduced-motion: reduce) {
  .tile-falling {
    animation: none;
    opacity: 1;
    transform: none;
  }
}


